# A bidirectional relationship has both an owning side and an inverse side
# A unidirectional relationship only has an owning side.
# The owning side has to use the inversedBy
# ManyToOne is always the owning side of a bidirectional association.

# this is the inversed side, so we use 'mappedBy'
AppBundle\Entity\User:

    type: entity
    oneToMany:
      userId: # targets field
        targetEntity: UserVideos
        mappedBy: id # has to be a field for this entity

    id:
        id:
            type: integer
            generator: { strategy: AUTO }
    fields:
        firstname:
            type: string
            length: 25
        lastname:
            type: string
            length: 25
        username:
            type: string
            length: 25
            unique: true
        password:
            type: string
            length: 64
        email:
            type: string
            length: 60
            unique: true

        # don't forget to init the collection in the __construct() method of the entity